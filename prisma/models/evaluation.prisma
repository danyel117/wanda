datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Enum_TaskEvaluationStatus {
    NOT_STARTED
    STARTED
    COMPLETED
    FAILED
}

enum Enum_EvaluationSessionStatus {
    NOT_STARTED
    STARTED
    COMPLETED
}

model EvaluationSession {
    id           String                       @id @default(cuid())
    status       Enum_EvaluationSessionStatus @default(NOT_STARTED)
    study        Study                        @relation(fields: [studyId], references: [id])
    studyId      String
    expert       User                         @relation(fields: [expertId], references: [id], name: "session-expert")
    expertId     String
    user         User                         @relation(fields: [userId], references: [id], name: "session-user")
    userId       String
    taskStatuses EvaluationTaskStatus[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model EvaluationTaskStatus {
    id                  String                    @id @default(cuid())
    status              Enum_TaskEvaluationStatus @default(NOT_STARTED)
    task                Task                      @relation(fields: [taskId], references: [id])
    taskId              String
    session             EvaluationSession         @relation(fields: [evaluationSessionId], references: [id])
    evaluationSessionId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Script {
    id        String  @id @default(cuid())
    name      String  @unique
    script    String  @db.Text
    recording String?
    createdBu User    @relation(fields: [userId], references: [id])
    userId    String
    studies   Study[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Task {
    id          String                 @id @default(cuid())
    description String                 @db.Text
    url         String
    recording   String?
    study       Study                  @relation(fields: [studyId], references: [id])
    studyId     String
    evaluations EvaluationTaskStatus[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Study {
    id               String              @id @default(cuid())
    name             String
    site             String
    researchQuestion String
    script           Script              @relation(fields: [scriptId], references: [id])
    scriptId         String
    createdBy        User                @relation(fields: [userId], references: [id], name: "study-expert")
    userId           String              @unique
    participants     User[]              @relation("study-participants")
    sessions         EvaluationSession[]
    tasks            Task[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id               String              @id @default(cuid())
    isParticipantOf  Study[]             @relation("study-participants")
    studies          Study[]             @relation("study-expert")
    sessionsAsExpert EvaluationSession[] @relation("session-expert")
    sessionsAsUser   EvaluationSession[] @relation("session-user")
    scripts          Script[]
}
